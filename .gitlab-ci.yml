build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # Build Auth Service
    - /kaniko/executor --context $CI_PROJECT_DIR/auth --dockerfile $CI_PROJECT_DIR/auth/Dockerfile --destination $CI_REGISTRY_IMAGE/auth:latest
    # Build Next Client
    - /kaniko/executor --context $CI_PROJECT_DIR/client --dockerfile $CI_PROJECT_DIR/client/Dockerfile --destination $CI_REGISTRY_IMAGE/client:latest

# #For deployment on GCP cluster
# deploy:
#   stage: deploy
#   image: google/cloud-sdk
#   script:
#     - echo $GCP_SERVICE_KEY > gcloud-service-key.json
#     - gcloud auth activate-service-account --key-file gcloud-service-key.json
#     - gcloud config set project $GCP_PROJECT_ID
#     - gcloud container clusters get-credentials jakek8s --zone=us-central1-c
#     #  Deploy Auth Service
#     - kubectl apply -f ./infra/k8s/auth-depl.yaml
#     - kubectl rollout restart deployment auth-depl -n default
#     # Deploy Next Client
#     - kubectl apply -f ./infra/k8s/client-depl.yaml
#     - kubectl rollout restart deployment ms-client-depl -n default
#     # - kubectl apply -f ./infra/k8s/auth-mongo-depl.yaml

deploy:
  stage: deploy
  image:
    name: jtp03a/kubectl
  script:
    - mkdir ~/.kube
    - echo $kube_config | base64 -d > ~/.kube/config
    - kubectl apply -f ./infra/k8s/auth-depl.yaml
    - kubectl rollout restart deployment auth-depl -n default
      # Deploy Next Client
    - kubectl apply -f ./infra/k8s/client-depl.yaml
    - kubectl rollout restart deployment ms-client-depl -n default
